{"version":3,"sources":["reducers/index.js","reducers/general.js","constants/actionTypes.js","store.js","constants/general.js","actions/general.js","components/Header/Header.js","components/EmptyPhoto/EmptyPhoto.js","components/InfoText/InfoText.js","components/Loader/Loader.js","components/Rating/Rating.js","pages/Details/Details.js","components/MovieCard/MovieCard.js","pages/Main/components/SectionTitle.js","pages/Main/components/SwiperSection.js","pages/Main/Main.js","components/Pagination/Pagination.js","pages/Results/components/SearchResult/components/ItemInfo.js","pages/Results/components/SearchResult/components/ItemPoster.js","pages/Results/components/SearchResult/SearchResult.js","pages/Results/Results.js","navigation/AppRouter.js","App.js","index.js"],"names":["rootReducer","combineReducers","general","state","query","isLoading","searchResult","totalPages","pageNumber","error","movieDetails","popularMovies","topRatedMovies","nowPlayingMovies","videoKey","action","type","key","value","configureStore","createStore","applyMiddleware","thunk","API_KEY","API_URL","IMG_URL","setGeneralValue","setLoading","setError","searchMovies","page","url","dispatch","fetch","then","response","json","data","success","status_message","results","length","batch","setTotalPages","total_pages","Header","useDispatch","history","useHistory","useSelector","shallowEqual","to","className","icon","faFilm","onSubmit","e","preventDefault","push","name","onChange","target","placeholder","disabled","EmptyPhoto","backdrop","faCamera","defaultProps","InfoText","label","text","Loader","Rating","rating","popularityMark","color","ratingFill","backgroundColor","width","faStar","style","faFrown","Details","movieId","useParams","useEffect","id","getMovieDetails","getMovieVideo","getGenres","String","genres","map","backdrop_path","poster_path","src","alt","title","homepage","href","rel","faGlobe","release_date","faCalendarCheck","production_countries","getCountries","faFlag","faFileVideo","budget","faDollarSign","vote_average","overview","faBookOpen","frameBorder","allow","allowFullScreen","imdb_id","MovieCard","poster","SectionTitle","SwiperSection","sectionTitle","sectionIcon","slidesPerColumnFill","slidesPerColumn","spaceBetween","breakpoints","768","original_title","Main","Promise","all","resolve","nowPlayingData","popularData","topRatedData","faPlayCircle","faFire","Pagination","forcePage","pageCount","previousLabel","faArrowLeft","nextLabel","faArrowRight","containerClassName","pageLinkClassName","pageClassName","breakLinkClassName","breakClassName","previousLinkClassName","previousClassName","nextLinkClassName","nextClassName","disabledClassName","activeLinkClassName","onPageChange","selected","ItemInfo","releaseDate","voteAverage","shortInfo","split","slice","ItemPoster","SearchResult","res","Results","AppRouter","path","exact","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2a798740.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport general from './general';\n\nconst rootReducer = combineReducers({\n  general,\n});\n\nexport default rootReducer;\n","import { SET_GENERAL_VALUE } from '../constants/actionTypes';\n\nfunction initialState() {\n  return {\n    query: '',\n    isLoading: false,\n    searchResult: [],\n    totalPages: 0,\n    pageNumber: 0,\n    error: '',\n    movieDetails: {},\n    popularMovies: [],\n    topRatedMovies: [],\n    nowPlayingMovies: [],\n    videoKey: '',\n  };\n}\n\nexport default function general(state = initialState(), action) {\n  switch (action.type) {\n    case SET_GENERAL_VALUE:\n      return {\n        ...state,\n        [action.key]: action.value,\n      };\n    default:\n      return state;\n  }\n}\n","export const SET_GENERAL_VALUE = 'SET_GENERAL_VALUE';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst configureStore = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default configureStore;\n","export const API_KEY = 'ce9638d1205f6f1d7267e2c103b8ae8f' //your www.themoviedb.org API KEY;\nexport const API_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/original';\n\nexport const EXTRA_LARGE_SCREEN = 1200;\nexport const LARGE_SCREEN = 992;\nexport const MEDIUM_SCREEN = 768;\nexport const SMALL_SCREEN = 576;\n","import { batch } from 'react-redux';\nimport { SET_GENERAL_VALUE } from '../constants/actionTypes';\nimport { API_URL, API_KEY } from '../constants/general';\n\nexport const setGeneralValue = (key, value) => ({\n  type: SET_GENERAL_VALUE,\n  key,\n  value,\n});\n\nexport const setLoading = (value) => ({\n  type: SET_GENERAL_VALUE,\n  key: 'isLoading',\n  value,\n});\n\nexport const setError = (value) => ({\n  type: SET_GENERAL_VALUE,\n  key: 'error',\n  value,\n});\n\nexport const setSearchResult = (value) => ({\n  type: SET_GENERAL_VALUE,\n  key: 'searchResult',\n  value,\n});\n\nexport const setTotalPages = (value) => ({\n  type: SET_GENERAL_VALUE,\n  key: 'totalPages',\n  value,\n});\n\nexport const setQuery = (value) => ({\n  type: SET_GENERAL_VALUE,\n  key: 'query',\n  value,\n});\n\nexport const searchMovies = (query, page) => {\n  const url = `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${\n    page || 1\n  }`;\n  return (dispatch) => {\n    if (!page) {\n      dispatch(setGeneralValue('pageNumber', 0));\n    }\n    dispatch(setLoading(true));\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.success) {\n          dispatch(setError(data.status_message));\n        }\n        if (data?.results?.length === 0) {\n          dispatch(setError('Nothing found, please try again'));\n        }\n        batch(() => {\n          dispatch(setLoading(false));\n          dispatch(setSearchResult(data.results));\n          dispatch(setTotalPages(data.total_pages));\n        });\n      });\n  };\n};\n\nexport const getMovieDetails = (id) => {\n  const url = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.success) {\n          dispatch(setError(data.status_message));\n        }\n        batch(() => {\n          dispatch(setLoading(false));\n          dispatch(setGeneralValue('movieDetails', data));\n        });\n      });\n  };\n};\n\nexport const getMovieVideo = (id) => {\n  const url = `${API_URL}/movie/${id}/videos?api_key=${API_KEY}`;\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.success) {\n          dispatch(setError(data.status_message));\n        }\n        dispatch(setGeneralValue('videoKey', data.results[0]?.key));\n      });\n  };\n};\n\nconst getPopularMovies = () =>\n  new Promise((resolve) => {\n    const url = `${API_URL}/movie/popular?api_key=${API_KEY}&page=1`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        resolve(data);\n      });\n  });\n\nconst getTopRatedMovies = () =>\n  new Promise((resolve) => {\n    const url = `${API_URL}/movie/top_rated?api_key=${API_KEY}&page=1`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => resolve(data));\n  });\n\nconst getNowPlayingMovies = () =>\n  new Promise((resolve) => {\n    const url = `${API_URL}/movie/now_playing?api_key=${API_KEY}&page=1`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => resolve(data));\n  });\n\nexport const getMainPageData = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    Promise.all([\n      getNowPlayingMovies(),\n      getPopularMovies(),\n      getTopRatedMovies(),\n    ]).then((data) => {\n      const [nowPlayingData, popularData, topRatedData] = data;\n      if (\n        nowPlayingData.status_message ||\n        popularData.status_message ||\n        topRatedData.status_message\n      ) {\n        dispatch(setLoading(false));\n        dispatch(setError('Loading error'));\n      } else {\n        batch(() => {\n          dispatch(setLoading(false));\n          dispatch(setGeneralValue('nowPlayingMovies', nowPlayingData.results));\n          dispatch(setGeneralValue('popularMovies', popularData.results));\n          dispatch(setGeneralValue('topRatedMovies', topRatedData.results));\n        });\n      }\n    });\n  };\n};\n","import React from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\nimport { searchMovies, setQuery } from '../../actions/general';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { query } = useSelector((state) => state.general, shallowEqual);\n  return (\n    <header>\n      <Link to=\"/React-movie-search\" className=\"logo\">\n        <FontAwesomeIcon icon={faFilm} />\n        <h1>React Movie Search</h1>\n      </Link>\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          dispatch(searchMovies(query));\n          history.push('/React-movie-search/results');\n        }}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          className=\"input\"\n          value={query}\n          onChange={(e) => dispatch(setQuery(e.target.value))}\n          placeholder=\"Enter movie name\"\n        />\n        <button type=\"submit\" className=\"button\" disabled={!query.length}>\n          Search\n        </button>\n      </form>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\n\nconst EmptyPhoto = ({ backdrop }) => {\n  return (\n    <div className={`no-photo ${backdrop && 'backdrop'}`}>\n      <FontAwesomeIcon icon={faCamera} />\n      <p>No photo</p>\n    </div>\n  );\n};\n\nEmptyPhoto.propTypes = {\n  backdrop: PropTypes.bool,\n};\n\nEmptyPhoto.defaultProps = {\n  backdrop: false,\n};\n\nexport default EmptyPhoto;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InfoText = ({ label, text, icon }) => {\n  return (\n    <div className=\"info-container\">\n      {icon && (\n        <div className=\"info-icon\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      )}\n      <p className=\"info-text\">\n        <span>{label} </span>\n        {text}\n      </p>\n    </div>\n  );\n};\n\nInfoText.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})])\n    .isRequired,\n  text: PropTypes.string,\n  icon: PropTypes.shape({}),\n};\n\nInfoText.defaultProps = {\n  text: '',\n  icon: {},\n};\n\nexport default InfoText;\n","import React from 'react';\n\nconst Loader = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { faFrown, faStar } from '@fortawesome/free-solid-svg-icons';\nimport InfoText from '../InfoText/InfoText';\n\nconst Rating = ({ rating }) => {\n  const popularityMark = (rating / 10) * 200;\n  let color = '#870000';\n  if (popularityMark >= 100 && popularityMark <= 200) {\n    color = '#00e676';\n  } else if (popularityMark >= 50 && popularityMark <= 100) {\n    color = '#c8b900';\n  }\n  const ratingFill = {\n    backgroundColor: color,\n    width: popularityMark,\n  };\n\n  return rating !== 0 ? (\n    <>\n      <InfoText label=\"Rating:\" icon={faStar} />\n      <div className=\"rating-container\">\n        <div className=\"rating\">\n          <div style={ratingFill} className=\"rating-fill\" />\n        </div>\n        <p>{rating}</p>\n      </div>\n    </>\n  ) : (\n    <InfoText label=\"No rating\" icon={faFrown} />\n  );\n};\n\nRating.propTypes = {\n  rating: PropTypes.number,\n};\n\nRating.defaultProps = {\n  rating: 0,\n};\n\nexport default Rating;\n","import React, { useEffect } from 'react';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  faBookOpen,\n  faCalendarCheck,\n  faDollarSign,\n  faFileVideo,\n  faFlag,\n  faGlobe,\n} from '@fortawesome/free-solid-svg-icons';\nimport { getMovieDetails, getMovieVideo } from '../../actions/general';\nimport EmptyPhoto from '../../components/EmptyPhoto/EmptyPhoto';\nimport InfoText from '../../components/InfoText/InfoText';\nimport Loader from '../../components/Loader/Loader';\nimport Rating from '../../components/Rating/Rating';\nimport { IMG_URL } from '../../constants/general';\n\nconst Details = () => {\n  const { movieId } = useParams();\n  const { movieDetails, error, isLoading, videoKey } = useSelector(\n    (state) => state.general,\n    shallowEqual,\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    batch(() => {\n      dispatch(getMovieDetails(movieId));\n      dispatch(getMovieVideo(movieId));\n    });\n  }, [dispatch, movieId]);\n\n  const getGenres = () => {\n    return String(movieDetails?.genres?.map(({ name }) => name));\n  };\n\n  const getCountries = () => {\n    return String(movieDetails?.production_countries?.map(({ name }) => name));\n  };\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return error ? (\n    <p className=\"error\">{error}</p>\n  ) : (\n    <div className=\"details-container\">\n      <Link to=\"/React-movie-search/results\" className=\"back-link\" />\n      <div className=\"backdrop-poster\">\n        {movieDetails?.backdrop_path || movieDetails?.poster_path ? (\n          <img\n            className=\"backdrop-image\"\n            src={`${IMG_URL}${\n              movieDetails?.backdrop_path || movieDetails?.poster_path\n            }`}\n            alt={movieDetails.id}\n          />\n        ) : (\n          <EmptyPhoto backdrop />\n        )}\n        <h1 className=\"backdrop-title\">{movieDetails?.title}</h1>\n      </div>\n      <div className=\"details-info\">\n        {movieDetails?.homepage && (\n          <InfoText\n            label={\n              <a\n                href={`${movieDetails?.homepage}`}\n                className=\"link-light\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\">\n                Homepage\n              </a>\n            }\n            icon={faGlobe}\n          />\n        )}\n        <InfoText\n          label=\"Release date:\"\n          text={movieDetails?.release_date}\n          icon={faCalendarCheck}\n        />\n        {movieDetails?.production_countries?.[0]?.name && (\n          <InfoText\n            label={\n              movieDetails?.production_countries?.length > 1\n                ? 'Countries:'\n                : 'Country:'\n            }\n            text={getCountries()}\n            icon={faFlag}\n          />\n        )}\n        {getGenres().length > 0 && (\n          <InfoText\n            label={movieDetails?.genres?.length > 1 ? 'Genres:' : 'Genre:'}\n            text={getGenres()}\n            icon={faFileVideo}\n          />\n        )}\n        {movieDetails?.budget !== 0 && (\n          <InfoText\n            label=\"Budget:\"\n            text={movieDetails?.budget}\n            icon={faDollarSign}\n          />\n        )}\n        <Rating rating={movieDetails?.vote_average} />\n        <InfoText\n          label={movieDetails?.overview ? 'Description:' : 'No description'}\n          icon={faBookOpen}\n        />\n        <p className=\"info-text\">{movieDetails?.overview}</p>\n      </div>\n      {videoKey && (\n        <div className=\"youtube-video\">\n          <iframe\n            title=\"youtube-video\"\n            src={`https://www.youtube.com/embed/${videoKey}`}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          />\n        </div>\n      )}\n      {movieDetails?.imdb_id && (\n        <a\n          href={`https://www.imdb.com/title/${movieDetails?.imdb_id}`}\n          className=\"imdb-link\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\">\n          Movie page on IMDb\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { IMG_URL } from '../../constants/general';\n\nconst MovieCard = ({ title, poster, id }) => {\n  return (\n    <Link to={`/React-movie-search/details/${id}`} className=\"movie-card\">\n      <h1>{title}</h1>\n      <img src={`${IMG_URL}${poster}`} alt={poster} />\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SectionTitle = ({ title, icon }) => {\n  return (\n    <div className=\"main-section-title\">\n      {icon && <FontAwesomeIcon icon={icon} />}\n      <h1>{title}</h1>\n    </div>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.shape({}).isRequired,\n};\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport MovieCard from '../../../components/MovieCard/MovieCard';\nimport SectionTitle from './SectionTitle';\n\nconst SwiperSection = ({ sectionTitle, sectionIcon, data }) => {\n  return (\n    <>\n      <SectionTitle title={sectionTitle} icon={sectionIcon} />\n      <div className=\"section-container\">\n        <Swiper\n          slidesPerColumnFill=\"row\"\n          slidesPerColumn={4}\n          spaceBetween={5}\n          breakpoints={{\n            768: {\n              slidesPerColumn: 4,\n            },\n          }}>\n          {data.map(({ id, original_title: title, poster_path: poster }) => (\n            <SwiperSlide key={id}>\n              <MovieCard title={title} poster={poster} id={id} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    </>\n  );\n};\n\nSwiperSection.propTypes = {\n  sectionTitle: PropTypes.string.isRequired,\n  sectionIcon: PropTypes.shape({}).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default SwiperSection;\n","import {\n  faFire,\n  faPlayCircle,\n  faStar,\n} from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { getMainPageData } from '../../actions/general';\nimport Loader from '../../components/Loader/Loader';\nimport SwiperSection from './components/SwiperSection';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMainPageData());\n  }, [dispatch]);\n  const {\n    popularMovies,\n    topRatedMovies,\n    nowPlayingMovies,\n    isLoading,\n  } = useSelector((state) => state.general, shallowEqual);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <SwiperSection\n        sectionTitle=\"Now playing\"\n        sectionIcon={faPlayCircle}\n        data={nowPlayingMovies}\n      />\n      <SwiperSection\n        sectionTitle=\"Popular movies\"\n        sectionIcon={faFire}\n        data={popularMovies}\n      />\n      <SwiperSection\n        sectionTitle=\"Top rated\"\n        sectionIcon={faStar}\n        data={topRatedMovies}\n      />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { searchMovies, setGeneralValue } from '../../actions/general';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const { totalPages, query, pageNumber } = useSelector(\n    (state) => state.general,\n    shallowEqual,\n  );\n  return (\n    totalPages > 1 && (\n      <ReactPaginate\n        forcePage={pageNumber}\n        pageCount={totalPages}\n        previousLabel={<FontAwesomeIcon icon={faArrowLeft} />}\n        nextLabel={<FontAwesomeIcon icon={faArrowRight} />}\n        containerClassName=\"pagination-container\"\n        pageLinkClassName=\"pagination-page\"\n        pageClassName=\"pagination-list\"\n        breakLinkClassName=\"pagination-page\"\n        breakClassName=\"pagination-list\"\n        previousLinkClassName=\"pagination-page\"\n        previousClassName=\"pagination-list\"\n        nextLinkClassName=\"pagination-page\"\n        nextClassName=\"pagination-list\"\n        disabledClassName=\"pagination-disabled\"\n        activeLinkClassName=\"pagination-active-link\"\n        onPageChange={({ selected }) => {\n          batch(() => {\n            dispatch(searchMovies(query, selected + 1));\n            dispatch(setGeneralValue('pageNumber', selected));\n          });\n        }}\n      />\n    )\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { faCalendarCheck } from '@fortawesome/free-solid-svg-icons';\nimport Rating from '../../../../../components/Rating/Rating';\nimport InfoText from '../../../../../components/InfoText/InfoText';\n\nconst ItemInfo = ({ id, title, releaseDate, voteAverage, overview }) => {\n  let shortInfo = '';\n\n  if (overview.split('.')[0].length > 150) {\n    shortInfo = `${overview.split('.')[0].slice(0, 150)}...`;\n  } else {\n    shortInfo = `${overview.split('.')[0]}${\n      overview?.split('.')[1] && `. ${overview.split('.')[1]}`\n    }...`;\n  }\n\n  return (\n    <div className=\"search-item-info\">\n      <Link to={`/React-movie-search/details/${id}`}>\n        <h1>{title}</h1>\n      </Link>\n      <div className=\"result-info\">\n        <InfoText\n          label=\"Release date\"\n          text={releaseDate}\n          icon={faCalendarCheck}\n        />\n        <Rating rating={voteAverage} />\n        <p>{overview.length ? shortInfo : 'No description'}</p>\n      </div>\n      <Link\n        to={`/React-movie-search/details/${id}`}\n        className=\"button read-more-btn\">\n        Read more\n      </Link>\n    </div>\n  );\n};\n\nItemInfo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string,\n  voteAverage: PropTypes.number,\n  overview: PropTypes.string,\n};\n\nItemInfo.defaultProps = {\n  releaseDate: '',\n  voteAverage: 0,\n  overview: '',\n};\n\nexport default ItemInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport EmptyPhoto from '../../../../../components/EmptyPhoto/EmptyPhoto';\nimport { IMG_URL } from '../../../../../constants/general';\n\nconst ItemPoster = ({ id, poster }) => {\n  return (\n    <Link to={`/React-movie-search/details/${id}`} className=\"poster-link\">\n      {poster ? (\n        <img\n          src={`${IMG_URL}${poster}`}\n          alt={`${IMG_URL}${poster}`}\n          className=\"poster-image\"\n        />\n      ) : (\n        <EmptyPhoto />\n      )}\n    </Link>\n  );\n};\n\nItemPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n};\n\nItemPoster.defaultProps = {\n  poster: '',\n};\n\nexport default ItemPoster;\n","import React, { useEffect } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Loader from '../../../../components/Loader/Loader';\nimport Pagination from '../../../../components/Pagination/Pagination';\nimport ItemInfo from './components/ItemInfo';\nimport ItemPoster from './components/ItemPoster';\n\nconst SearchResult = () => {\n  const { searchResult, error, isLoading, query } = useSelector(\n    (state) => state.general,\n    shallowEqual,\n  );\n  const history = useHistory();\n  useEffect(() => {\n    if (!query) {\n      history.push('/React-movie-search');\n    }\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return error ? (\n    <p className=\"error\">{error}</p>\n  ) : (\n    <>\n      {searchResult?.map((res) => {\n        const {\n          id,\n          title,\n          poster_path: poster,\n          backdrop_path: backdrop,\n          release_date: releaseDate,\n          vote_average: voteAverage,\n          overview,\n        } = res;\n        return (\n          <div key={id} className=\"search-item\">\n            <ItemPoster id={id} poster={poster || backdrop} />\n            <ItemInfo\n              id={id}\n              title={title}\n              releaseDate={releaseDate}\n              voteAverage={voteAverage}\n              overview={overview}\n            />\n          </div>\n        );\n      })}\n      <Pagination />\n    </>\n  );\n};\n\nexport default SearchResult;\n","import React from 'react';\nimport Pagination from '../../components/Pagination/Pagination';\nimport SearchResult from './components/SearchResult/SearchResult';\n\nconst Results = () => {\n  return (\n    <>\n      <Pagination />\n      <SearchResult />\n    </>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport Details from '../pages/Details/Details';\nimport Main from '../pages/Main/Main';\nimport Results from '../pages/Results/Results';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/React-movie-search\" exact>\n            <Main />\n          </Route>\n          <Route path=\"/React-movie-search/results\">\n            <Results />\n          </Route>\n          <Route path=\"/React-movie-search/details/:movieId\">\n            <Details />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './navigation/AppRouter';\n\nconst App = () => {\n  return <AppRouter />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/index.sass';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}